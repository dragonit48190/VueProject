// src/services/authService.js
export const authService = {
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ user login ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
  isAuthenticated() {
    return localStorage.getItem('isLoggedIn') === 'true'
  },

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡∏ó‡∏µ‡πà login ‡∏≠‡∏¢‡∏π‡πà
  getUser() {
    const userData = localStorage.getItem('user')
    return userData ? JSON.parse(userData) : null
  },

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
  saveUserData(userData) {
    localStorage.setItem('user', JSON.stringify(userData))
    localStorage.setItem('isLoggedIn', 'true')
    console.log('‚úÖ User data saved:', userData)
  },

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
  canAccessReport(reportType) {
    const user = this.getUser()
    if (!user) {
      console.log('‚ùå No user logged in')
      return false
    }

    // ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏π‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    if (user.groupname === '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö') {
      console.log('Admin access granted')
      return true
    }

    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ï‡∏≤‡∏° group
    const accessMap = {
      'PCU': ['‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô PCU'],
      'ER': ['‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ER'],
      '‡∏Å‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ö‡∏≥‡∏ö‡∏±‡∏î': ['‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏¢‡∏†‡∏≤‡∏û'],
      '‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ': ['‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô']
    }

    const allowedReports = accessMap[user.groupname] || []
    const hasAccess = allowedReports.includes(reportType)
    
    console.log(`üîç Access check: ${user.groupname} ‚Üí ${reportType} = ${hasAccess}`)
    return hasAccess
  },

  // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
  logout() {
    localStorage.removeItem('user')
    localStorage.removeItem('isLoggedIn')
    localStorage.removeItem('userAvatar') // üî• ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏ß‡∏¢
    console.log('üö™ User logged out')
  },

  // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Header
  getDisplayName() {
    const user = this.getUser()
    return user ? user.name : 'Guest'
  },

  // ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Header
  getPosition() {
    const user = this.getUser()
    return user ? user.entryposition : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö'
  },

  // ‡∏î‡∏∂‡∏á group name
  getUserGroup() {
    const user = this.getUser()
    return user ? user.groupname : ''
  },

  // ‡∏î‡∏∂‡∏á username
  getUsername() {
    const user = this.getUser()
    return user ? user.loginnaam : ''
  },

  // üî• ‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å API
  async getUserAvatar() {
    try {
      const user = this.getUser()
      if (!user) return null

      // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÉ‡∏ô localStorage ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const cachedAvatar = localStorage.getItem('userAvatar')
      if (cachedAvatar) {
        return cachedAvatar
      }

      console.log('üì∏ Fetching avatar from API for username:', user.loginname) // ‡πÄ‡∏û‡∏¥‡πà‡∏°
      // ‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ‡∏à‡∏≤‡∏Å API
      const response = await fetch(`http://localhost:5000/api/auth/avatar/${user.loginnaam}`)
      console.log('üì∏ API Response status:', response.status) // ‡πÄ‡∏û‡∏¥‡πà‡∏°
      const data = await response.json()
      console.log('üì∏ API Response data:', data) // ‡πÄ‡∏û‡∏¥‡πà‡∏°

      if (data.success && data.hasImage) {
        // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡πÉ‡∏ô localStorage ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ
        localStorage.setItem('userAvatar', data.image)
        return data.image
      }

      console.log('üì∏ No image found in API response') // ‡πÄ‡∏û‡∏¥‡πà‡∏°
      return null // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ
    } catch (error) {
      console.error('Error fetching avatar:', error)
      return null
    }
  },

  // üî• ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏ï‡πá‡∏°
  async getUserProfile() {
    try {
      const user = this.getUser()
      if (!user) return null

      const response = await fetch('http://localhost:5000/api/auth/profile', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          loginnaam: user.loginnaam
        })
      })

      const data = await response.json()

      if (data.success) {
        return data.profile
      }

      return null
    } catch (error) {
      console.error('Error fetching profile:', error)
      return null
    }
  },

  // üî• ‡∏•‡∏ö cache ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä)
  clearAvatarCache() {
    localStorage.removeItem('userAvatar')
  },

  // üî• ‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ default
  getDefaultAvatar() {
    return 'assets/images/avatars/avatar-d.png'
  }
}