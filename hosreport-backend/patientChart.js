// patientChart.js
const express = require('express')
const db = require('./db')

const router = express.Router()

// üî• GET /api/patient-chart/opd-statistics - ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
router.get('/opd-statistics', (req, res) => {
  try {
    // SQL Query ‡∏ï‡∏≤‡∏° PHP ‡πÄ‡∏î‡∏¥‡∏°
    const query = `
      SELECT 
        MONTH(vstdate) AS monthNumber,
        COUNT(DISTINCT hn) AS totalPt,
        COUNT(*) AS totalVisit
      FROM ovst 
      WHERE vstdate BETWEEN '2024-10-01' AND '2025-09-30'
      GROUP BY MONTH(vstdate)
      ORDER BY 
        CASE 
          WHEN MONTH(vstdate) >= 10 THEN MONTH(vstdate) 
          ELSE MONTH(vstdate) + 12 
        END
    `

    db.query(query, (err, results) => {
      if (err) {
        console.error('OPD Statistics Database error:', err)
        return res.status(500).json({
          success: false,
          message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
        })
      }

      // ‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏ï‡∏≤‡∏° PHP ‡πÄ‡∏î‡∏¥‡∏°)
      const monthNames = {
        10: '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', 11: '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', 12: '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°',
        1: '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', 2: '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', 3: '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°',
        4: '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', 5: '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', 6: '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô',
        7: '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', 8: '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°', 9: '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô'
      }

      const labels = []
      const totalPatients = []
      const totalVisits = []

      // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏ï‡∏≤‡∏° PHP ‡πÄ‡∏î‡∏¥‡∏°)
      results.forEach(row => {
        const monthNumber = parseInt(row.monthNumber)
        labels.push(monthNames[monthNumber] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')
        totalPatients.push(parseInt(row.totalPt))
        totalVisits.push(parseInt(row.totalVisit))
      })

      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const totalAllVisits = totalVisits.reduce((sum, val) => sum + val, 0)
      const totalAllPatients = totalPatients.reduce((sum, val) => sum + val, 0)

      // ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î
      const maxVisitIndex = totalVisits.indexOf(Math.max(...totalVisits))
      const minVisitIndex = totalVisits.indexOf(Math.min(...totalVisits))

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
      const monthlyDetails = labels.map((month, index) => ({
        month: month,
        patients: totalPatients[index],
        visits: totalVisits[index]
      }))

      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà Frontend ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡∏ï‡∏≤‡∏° PHP ‡πÄ‡∏î‡∏¥‡∏°)
      res.json({
        success: true,
        data: {
          // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Highcharts (‡∏ï‡∏≤‡∏° PHP ‡πÄ‡∏î‡∏¥‡∏°)
          labels: labels,
          totalPatients: totalPatients,
          totalVisits: totalVisits,
          
          // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Sidebar
          summary: {
            totalAllVisits: totalAllVisits,
            totalAllPatients: totalAllPatients,
            maxMonth: {
              month: labels[maxVisitIndex],
              patients: totalPatients[maxVisitIndex],
              visits: totalVisits[maxVisitIndex]
            },
            minMonth: {
              month: labels[minVisitIndex],
              patients: totalPatients[minVisitIndex],
              visits: totalVisits[minVisitIndex]
            }
          },
          
          // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          monthlyDetails: monthlyDetails
        }
      })
    })

  } catch (error) {
    console.error('OPD Statistics error:', error)
    res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö'
    })
  }
})

// ‡∏•‡∏ö‡∏™‡πà‡∏ß‡∏ô dashboard-stats ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß - ‡πÉ‡∏ä‡πâ API ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà

// üî• GET /api/patient-chart/yearly-comparison/:year - ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏õ‡∏µ (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)
router.get('/yearly-comparison/:year', (req, res) => {
  try {
    const year = req.params.year || '2568'
    
    // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° logic ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏õ‡∏µ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
    const currentYearStart = year === '2568' ? '2024-10-01' : `${parseInt(year) + 543 - 1}-10-01`
    const currentYearEnd = year === '2568' ? '2025-09-30' : `${parseInt(year) + 543}-09-30`
    
    const query = `
      SELECT 
        YEAR(vstdate) as year,
        MONTH(vstdate) AS monthNumber,
        COUNT(DISTINCT hn) AS totalPt,
        COUNT(*) AS totalVisit
      FROM ovst 
      WHERE vstdate BETWEEN ? AND ?
      GROUP BY YEAR(vstdate), MONTH(vstdate)
      ORDER BY year, 
        CASE 
          WHEN MONTH(vstdate) >= 10 THEN MONTH(vstdate) 
          ELSE MONTH(vstdate) + 12 
        END
    `

    db.query(query, [currentYearStart, currentYearEnd], (err, results) => {
      if (err) {
        console.error('Yearly comparison error:', err)
        return res.status(500).json({
          success: false,
          message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
        })
      }

      res.json({
        success: true,
        data: results,
        year: year
      })
    })

  } catch (error) {
    console.error('Yearly comparison error:', error)
    res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö'
    })
  }
})

module.exports = router