// ipdPatientChart.js
const express = require('express')
const db = require('./db')

const router = express.Router()

// üî• GET /api/ipd-patient-chart/monthly-statistics - ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
router.get('/monthly-statistics', (req, res) => {
  try {
    // SQL Query ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏°‡∏≤
    const query = `
      SELECT 
        MONTH(regdate) AS month,
        COUNT(*) AS total
      FROM an_stat
      WHERE regdate BETWEEN '2024-10-01' AND '2025-09-30'
      GROUP BY MONTH(regdate)
      ORDER BY 
        CASE 
          WHEN MONTH(regdate) >= 10 THEN MONTH(regdate)
          ELSE MONTH(regdate) + 12
        END
    `

    db.query(query, (err, results) => {
      if (err) {
        console.error('IPD Patient Monthly Database error:', err)
        return res.status(500).json({
          success: false,
          message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'
        })
      }

      // ‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏õ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å OPD)
      const monthNames = {
        10: '‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°', 11: '‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô', 12: '‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°',
        1: '‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°', 2: '‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå', 3: '‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°',
        4: '‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô', 5: '‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°', 6: '‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô',
        7: '‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°', 8: '‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°', 9: '‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô'
      }

      const labels = []
      const totalAdmits = []  // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á Admit ‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô

      // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏õ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å OPD)
      results.forEach(row => {
        const monthNumber = parseInt(row.month)
        labels.push(monthNames[monthNumber] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏')
        totalAdmits.push(parseInt(row.total))
      })

      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const totalAllAdmits = totalAdmits.reduce((sum, val) => sum + val, 0)

      // ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î
      const maxAdmitIndex = totalAdmits.indexOf(Math.max(...totalAdmits))
      const minAdmitIndex = totalAdmits.indexOf(Math.min(...totalAdmits))

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
      const monthlyDetails = labels.map((month, index) => ({
        month: month,
        admits: totalAdmits[index]
      }))

      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö OPD
      res.json({
        success: true,
        data: {
          // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Chart (‡∏õ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å OPD)
          labels: labels,
          totalAdmits: totalAdmits,
          
          // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Sidebar
          summary: {
            totalAllAdmits: totalAllAdmits,
            maxMonth: {
              month: labels[maxAdmitIndex],
              admits: totalAdmits[maxAdmitIndex]
            },
            minMonth: {
              month: labels[minAdmitIndex],
              admits: totalAdmits[minAdmitIndex]
            }
          },
          
          // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          monthlyDetails: monthlyDetails
        }
      })
    })

  } catch (error) {
    console.error('IPD Patient Monthly error:', error)
    res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö'
    })
  }
})

module.exports = router